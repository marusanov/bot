import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, MessageHandler, Filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
TOKEN = os.getenv("BOT_TOKEN")  # –¢–µ–ø–µ—Ä—å –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

# ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ–∫—É–ø–∫–∞—Ö (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID", "")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥", callback_data='free_guide')],
        [InlineKeyboardButton("–ü–æ–ª–Ω—ã–π –≥–∞–π–¥", callback_data='full_guide')],
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext):
    user = update.effective_user
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        "–Ø –±–æ—Ç [–ò–º—è –±–ª–æ–≥–µ—Ä–∞]. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –≥–∞–π–¥—ã:\n\n"
        "‚Ä¢ üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥ - –æ—Å–Ω–æ–≤—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö\n"
        "‚Ä¢ üí∞ –ü–æ–ª–Ω—ã–π –≥–∞–π–¥ - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ñ–∏—à–∫–∞–º–∏\n\n"
        "–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:"
    )
    
    if update.message:
        update.message.reply_text(welcome_text, reply_markup=main_menu_keyboard())
    else:
        update.callback_query.edit_message_text(welcome_text, reply_markup=main_menu_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥"
def free_guide(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à PDF —Ñ–∞–π–ª (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å—Å—ã–ª–∫—É)
    pdf_url = "https://example.com/free_guide.pdf"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    
    text = "üìö –í–æ—Ç —Ç–≤–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥:\n\n–ü–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏!"
    query.edit_message_text(text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF (–µ—Å–ª–∏ —Ñ–∞–π–ª –ª–æ–∫–∞–ª—å–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ context.bot.send_document)
    context.bot.send_document(chat_id=query.message.chat_id, document=pdf_url)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
    back_button = InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='main_menu')
    query.message.reply_text("–ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=InlineKeyboardMarkup([[back_button]]))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª–Ω—ã–π –≥–∞–π–¥"
def full_guide(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    
    keyboard = [
        [InlineKeyboardButton("–ö—É–ø–∏—Ç—å –ø–æ–ª–Ω—ã–π –≥–∞–π–¥ ($19.99)", url="https://example.com/payment")],  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –æ–ø–ª–∞—Ç—ã
        [InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ", callback_data='preview')],
        [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='main_menu')],
    ]
    
    text = (
        "üí∞ –ü–æ–ª–Ω—ã–π –≥–∞–π–¥ –≤–∫–ª—é—á–∞–µ—Ç:\n\n"
        "‚Ä¢ 50+ —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É\n"
        "‚Ä¢ –õ–∏—á–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

# –ü—Ä–µ–≤—å—é —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –≥–∞–π–¥–∞
def preview(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    
    preview_text = (
        "üìñ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –≥–∞–π–¥–∞:\n\n"
        "1. –ì–ª–∞–≤–∞ 1: –û—Å–Ω–æ–≤—ã (10 —Å—Ç—Ä–∞–Ω–∏—Ü)\n"
        "2. –ì–ª–∞–≤–∞ 2: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ (15 —Å—Ç—Ä–∞–Ω–∏—Ü)\n"
        "3. –ì–ª–∞–≤–∞ 3: –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã (25 —Å—Ç—Ä–∞–Ω–∏—Ü)\n\n"
        "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø?"
    )
    
    keyboard = [
        [InlineKeyboardButton("–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å", url="https://example.com/payment")],
        [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='main_menu')],
    ]
    
    query.edit_message_text(preview_text, reply_markup=InlineKeyboardMarkup(keyboard))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
def error(update: Update, context: CallbackContext):
    logger.warning(f'Update "{update}" caused error "{context.error}"')

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(start, pattern='main_menu'))
    dp.add_handler(CallbackQueryHandler(free_guide, pattern='free_guide'))
    dp.add_handler(CallbackQueryHandler(full_guide, pattern='full_guide'))
    dp.add_handler(CallbackQueryHandler(preview, pattern='preview'))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error)

    return updater  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º updater –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å –≤–µ–±—Ö—É–∫–æ–º

if __name__ == '__main__':
    updater = main()
    
    # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (–≤–µ–±—Ö—É–∫ –∏–ª–∏ polling)
    if os.getenv("RAILWAY_ENVIRONMENT"):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Railway
        WEBHOOK_URL = "https://bot-production-d148.up.railway.app"  # –í–∞—à –¥–æ–º–µ–Ω
        PORT = int(os.getenv("PORT", 8443))
        
        updater.start_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=TOKEN,
            webhook_url=f"{WEBHOOK_URL}/{TOKEN}",
            drop_pending_updates=True
        )
    else:
        # –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º (polling)
        updater.start_polling()
        updater.idle()